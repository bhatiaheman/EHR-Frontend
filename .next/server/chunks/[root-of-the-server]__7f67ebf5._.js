module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},14747,(e,t,r)=>{t.exports=e.x("path",()=>require("path"))},24361,(e,t,r)=>{t.exports=e.x("util",()=>require("util"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},41926,e=>{"use strict";e.s(["getAccessToken",()=>s]);var t=e.i(65617);let r=`${process.env.MODMED_BASE_URL}/ema-dev/firm/${process.env.MODMED_FIRM_PREFIX}/ema/ws/oauth2/grant`,n=null,o=0;async function s(){if(n&&Date.now()<o)return n;try{if(!process.env.MODMED_USERNAME||!process.env.MODMED_PASSWORD||!process.env.MODMED_API_KEY)throw Error("Missing required environment variables for authentication");let e=await t.default.post(r,new URLSearchParams({grant_type:"password",username:process.env.MODMED_USERNAME,password:process.env.MODMED_PASSWORD}),{headers:{"Content-Type":"application/x-www-form-urlencoded","x-api-key":process.env.MODMED_API_KEY}});if(n=e.data.access_token,o=Date.now()+1e3*e.data.expires_in-6e4,!n)throw Error("Failed to obtain access token");return n}catch(e){throw console.error("Token fetch error:",e.response?.data||e.message),Error(`Authentication failed: ${e.response?.data?.error||e.message}`)}}},83693,(e,t,r)=>{},17386,e=>{"use strict";e.s(["handler",()=>C,"patchFetch",()=>P,"routeModule",()=>A,"serverHooks",()=>O,"workAsyncStorage",()=>D,"workUnitAsyncStorage",()=>M],17386);var t=e.i(47909),r=e.i(74017),n=e.i(96250),o=e.i(59756),s=e.i(61916),a=e.i(69741),i=e.i(16795),d=e.i(87718),l=e.i(95169),c=e.i(47587),u=e.i(66012),p=e.i(70101),g=e.i(26937),m=e.i(10372),h=e.i(93695);e.i(52474);var x=e.i(220);e.s(["GET",()=>E,"POST",()=>v,"PUT",()=>T],20435);var f=e.i(89171),y=e.i(41926);let w=`${process.env.MODMED_BASE_URL}/ema-dev/firm/${process.env.MODMED_FIRM_PREFIX}/ema/fhir/v2/Condition`;async function R(e,t,r,n,o=0){if(!process.env.MODMED_API_KEY){if(console.log(`Mocking ${e} request to ${t}`),"GET"===e)return{status:200,data:{resourceType:"Bundle",total:1,entry:[{resource:{resourceType:"Condition",id:"mock-cond-123",clinicalStatus:{coding:[{system:"http://terminology.hl7.org/CodeSystem/condition-clinical",code:"active"}]},code:{coding:[{system:"http://snomed.info/sct",code:"12345",display:"Hypertension"}]},subject:{reference:"Patient/mock-123"},onsetDateTime:"2025-01-01"}}]}};if("POST"===e||"PUT"===e)return{status:"POST"===e?201:200,data:{...r,id:r?.id||`mock-cond-${Date.now()}`}}}let s=n||await (0,y.getAccessToken)(),a={accept:"application/fhir+json",authorization:`Bearer ${s}`,"x-api-key":process.env.MODMED_API_KEY,"content-type":"application/fhir+json"};try{let n=new AbortController,i=setTimeout(()=>n.abort(),1e4),d=await fetch(t,{method:e,headers:a,body:r?JSON.stringify(r):void 0,signal:n.signal});clearTimeout(i);let l=d.headers.get("content-type");if(!d.ok){let n={status:d.status,statusText:d.statusText},a=await d.text();if(console.log("Raw Response Body:",a||"Empty response"),l?.includes("application/json")||l?.includes("application/fhir+json"))try{let e=JSON.parse(a);n={...n,...e},console.log("Parsed Error Response:",e)}catch(e){console.warn("Failed to parse error response as JSON:",e),n.rawText=a||"Empty response"}else n.rawText=a||"Empty response";if((429===d.status||503===d.status)&&o<3)return console.log(`Retrying request (attempt ${o+2})...`),await new Promise(e=>setTimeout(e,1e3*(o+1))),R(e,t,r,s,o+1);throw Error(JSON.stringify(n))}if(204===d.status||!l?.includes("json"))return{status:d.status,data:null};let c=await d.json();return console.log("ModMed API Success Response:",JSON.stringify(c,null,2)),{status:d.status,data:c}}catch(e){if("AbortError"===e.name)throw Error("Request timed out after 10 seconds");throw console.error("API request error:",e.message),e}}async function E(e){try{let{searchParams:t}=new URL(e.url),r=t.get("id"),n=t.get("patient"),o=w;r?o=`${w}/${r}`:n&&(o=`${w}?patient=${n}`);let s=await (0,y.getAccessToken)(),a=(await R("GET",o,void 0,s)).data||{},i=r?[a].filter(Boolean).map(e=>({id:e.id||"N/A",condition:e.code?.coding?.[0]?.display||"Unknown",status:e.clinicalStatus?.coding?.[0]?.code||"unknown",patientId:e.subject?.reference?.replace("Patient/","")||"N/A",onsetDate:e.onsetDateTime||""})):a.entry?.map(e=>{let t=e.resource;return{id:t.id||"N/A",condition:t.code?.coding?.[0]?.display||"Unknown",status:t.clinicalStatus?.coding?.[0]?.code||"unknown",patientId:t.subject?.reference?.replace("Patient/","")||"N/A",onsetDate:t.onsetDateTime||""}})||[];return f.NextResponse.json(i)}catch(t){console.error("Error fetching conditions:",t.message);let e=t.message.startsWith("{")?JSON.parse(t.message):{details:t.message};return f.NextResponse.json({error:"Failed to fetch conditions",details:e},{status:e.status||500})}}async function v(e){try{let t=await (0,y.getAccessToken)(),r=await e.json();if(!r.condition||!r.patientId)throw Error("Missing required fields: condition, patientId");let n={resourceType:"Condition",clinicalStatus:{coding:[{system:"http://terminology.hl7.org/CodeSystem/condition-clinical",code:r.status||"active"}]},code:{coding:[{system:"http://snomed.info/sct",code:r.conditionCode||"12345",display:r.condition}]},subject:{reference:`Patient/${r.patientId}`},onsetDateTime:r.onsetDate||new Date().toISOString().split("T")[0]};console.log("FHIR Payload Sent to ModMed (POST):",JSON.stringify(n,null,2));let o=await R("POST",w,n,t);return f.NextResponse.json(o.data||{message:"Condition created",id:o.data?.id},{status:201})}catch(t){console.error("Error creating condition:",t.message);let e=t.message.startsWith("{")?JSON.parse(t.message):{details:t.message};return f.NextResponse.json({error:"Failed to create condition",details:e},{status:e.status||500})}}async function T(e){try{let t=await (0,y.getAccessToken)(),r=await e.json();if(!r.id||!r.condition||!r.patientId)throw Error("Missing required fields: id, condition, patientId");let n={resourceType:"Condition",id:r.id,clinicalStatus:{coding:[{system:"http://terminology.hl7.org/CodeSystem/condition-clinical",code:r.status||"active"}]},code:{coding:[{system:"http://snomed.info/sct",code:r.conditionCode||"12345",display:r.condition}]},subject:{reference:`Patient/${r.patientId}`},onsetDateTime:r.onsetDate||new Date().toISOString().split("T")[0]};console.log("FHIR Payload Sent to ModMed (PUT):",JSON.stringify(n,null,2));let o=await R("PUT",`${w}/${r.id}`,n,t);return f.NextResponse.json(o.data||{message:"Condition updated",id:r.id},{status:200})}catch(t){console.error("Error updating condition:",t.message);let e=t.message.startsWith("{")?JSON.parse(t.message):{details:t.message};return f.NextResponse.json({error:"Failed to update condition",details:e},{status:e.status||500})}}var S=e.i(20435);let A=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/condition/route",pathname:"/api/condition",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/app/api/condition/route.ts",nextConfigOutput:"",userland:S}),{workAsyncStorage:D,workUnitAsyncStorage:M,serverHooks:O}=A;function P(){return(0,n.patchFetch)({workAsyncStorage:D,workUnitAsyncStorage:M})}async function C(e,t,n){var f;let y="/api/condition/route";y=y.replace(/\/index$/,"")||"/";let w=await A.prepare(e,t,{srcPage:y,multiZoneDraftMode:!1});if(!w)return t.statusCode=400,t.end("Bad Request"),null==n.waitUntil||n.waitUntil.call(n,Promise.resolve()),null;let{buildId:R,params:E,nextConfig:v,isDraftMode:T,prerenderManifest:S,routerServerContext:D,isOnDemandRevalidate:M,revalidateOnlyGenerated:O,resolvedPathname:P}=w,C=(0,a.normalizeAppPath)(y),N=!!(S.dynamicRoutes[C]||S.routes[P]);if(N&&!T){let e=!!S.routes[P],t=S.dynamicRoutes[C];if(t&&!1===t.fallback&&!e)throw new h.NoFallbackError}let _=null;!N||A.isDev||T||(_="/index"===(_=P)?"/":_);let j=!0===A.isDev||!N,k=N&&!j,b=e.method||"GET",I=(0,s.getTracer)(),q=I.getActiveScopeSpan(),U={params:E,prerenderManifest:S,renderOpts:{experimental:{cacheComponents:!!v.experimental.cacheComponents,authInterrupts:!!v.experimental.authInterrupts},supportsDynamicResponse:j,incrementalCache:(0,o.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(f=v.experimental)?void 0:f.cacheLife,isRevalidate:k,waitUntil:n.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,n)=>A.onRequestError(e,t,n,D)},sharedContext:{buildId:R}},$=new i.NodeNextRequest(e),H=new i.NodeNextResponse(t),F=d.NextRequestAdapter.fromNodeNextRequest($,(0,d.signalFromNodeResponse)(t));try{let a=async r=>A.handle(F,U).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let n=I.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==l.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let o=n.get("next.route");if(o){let e=`${b} ${o}`;r.setAttributes({"next.route":o,"http.route":o,"next.span_name":e}),r.updateName(e)}else r.updateName(`${b} ${e.url}`)}),i=async s=>{var i,d;let l=async({previousCacheEntry:r})=>{try{if(!(0,o.getRequestMeta)(e,"minimalMode")&&M&&O&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await a(s);e.fetchMetrics=U.renderOpts.fetchMetrics;let d=U.renderOpts.pendingWaitUntil;d&&n.waitUntil&&(n.waitUntil(d),d=void 0);let l=U.renderOpts.collectedTags;if(!N)return await (0,u.sendResponse)($,H,i,U.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,p.toNodeOutgoingHttpHeaders)(i.headers);l&&(t[m.NEXT_CACHE_TAGS_HEADER]=l),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==U.renderOpts.collectedRevalidate&&!(U.renderOpts.collectedRevalidate>=m.INFINITE_CACHE)&&U.renderOpts.collectedRevalidate,n=void 0===U.renderOpts.collectedExpire||U.renderOpts.collectedExpire>=m.INFINITE_CACHE?void 0:U.renderOpts.collectedExpire;return{value:{kind:x.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:n}}}}catch(t){throw(null==r?void 0:r.isStale)&&await A.onRequestError(e,t,{routerKind:"App Router",routePath:y,routeType:"route",revalidateReason:(0,c.getRevalidateReason)({isRevalidate:k,isOnDemandRevalidate:M})},D),t}},h=await A.handleResponse({req:e,nextConfig:v,cacheKey:_,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:S,isRoutePPREnabled:!1,isOnDemandRevalidate:M,revalidateOnlyGenerated:O,responseGenerator:l,waitUntil:n.waitUntil});if(!N)return null;if((null==h||null==(i=h.value)?void 0:i.kind)!==x.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==h||null==(d=h.value)?void 0:d.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,o.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",M?"REVALIDATED":h.isMiss?"MISS":h.isStale?"STALE":"HIT"),T&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let f=(0,p.fromNodeOutgoingHttpHeaders)(h.value.headers);return(0,o.getRequestMeta)(e,"minimalMode")&&N||f.delete(m.NEXT_CACHE_TAGS_HEADER),!h.cacheControl||t.getHeader("Cache-Control")||f.get("Cache-Control")||f.set("Cache-Control",(0,g.getCacheControlHeader)(h.cacheControl)),await (0,u.sendResponse)($,H,new Response(h.value.body,{headers:f,status:h.value.status||200})),null};q?await i(q):await I.withPropagatedContext(e.headers,()=>I.trace(l.BaseServerSpan.handleRequest,{spanName:`${b} ${e.url}`,kind:s.SpanKind.SERVER,attributes:{"http.method":b,"http.target":e.url}},i))}catch(t){if(q||t instanceof h.NoFallbackError||await A.onRequestError(e,t,{routerKind:"App Router",routePath:C,routeType:"route",revalidateReason:(0,c.getRevalidateReason)({isRevalidate:k,isOnDemandRevalidate:M})}),N)throw t;return await (0,u.sendResponse)($,H,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__7f67ebf5._.js.map