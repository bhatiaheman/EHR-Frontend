{"version":3,"sources":["turbopack:///[project]/lib/modmedAuth.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/app/api/medication/route.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst AUTH_ENDPOINT = `${process.env.MODMED_BASE_URL}/ema-dev/firm/${process.env.MODMED_FIRM_PREFIX}/ema/ws/oauth2/grant`;\r\n\r\nlet accessToken: string | null = null;\r\nlet tokenExpiry: number = 0;\r\n\r\nexport async function getAccessToken(): Promise<string> {\r\n  if (accessToken && Date.now() < tokenExpiry) return accessToken;\r\n\r\n  try {\r\n    if (!process.env.MODMED_USERNAME || !process.env.MODMED_PASSWORD || !process.env.MODMED_API_KEY) {\r\n      throw new Error('Missing required environment variables for authentication');\r\n    }\r\n\r\n    const response = await axios.post(\r\n      AUTH_ENDPOINT,\r\n      new URLSearchParams({\r\n        grant_type: 'password',\r\n        username: process.env.MODMED_USERNAME,\r\n        password: process.env.MODMED_PASSWORD,\r\n      }),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          'x-api-key': process.env.MODMED_API_KEY,\r\n        },\r\n      }\r\n    );\r\n\r\n    accessToken = response.data.access_token;\r\n    tokenExpiry = Date.now() + response.data.expires_in * 1000 - 60000; \r\n    if (!accessToken) {\r\n      throw new Error('Failed to obtain access token');\r\n    }\r\n    return accessToken;\r\n  } catch (error: any) {\r\n    console.error('Token fetch error:', error.response?.data || error.message);\r\n    throw new Error(`Authentication failed: ${error.response?.data?.error || error.message}`);\r\n  }\r\n}\r\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/medication/route\",\n        pathname: \"/api/medication\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/medication/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/medication/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAccessToken } from '@/lib/modmedAuth';\r\n\r\ninterface FhirMedicationStatement {\r\n  resourceType: 'MedicationStatement';\r\n  id?: string;\r\n  status: 'active' | 'completed' | 'entered-in-error' | 'intended' | 'stopped' | 'on-hold' | 'unknown';\r\n  medicationCodeableConcept?: { coding: { system?: string; code?: string; display?: string }[] };\r\n  subject: { reference: string };\r\n  effectiveDateTime?: string;\r\n  dosage?: { text?: string; doseQuantity?: { value: number; unit: string } }[];\r\n}\r\n\r\nconst API_URL = `${process.env.MODMED_BASE_URL}/ema-dev/firm/${process.env.MODMED_FIRM_PREFIX}/ema/fhir/v2/MedicationStatement`;\r\n\r\nasync function makeApiRequest(method: string, url: string, body?: FhirMedicationStatement, accessToken?: string, retryCount = 0): Promise<{ status: number; data: any }> {\r\n\r\n  if (!process.env.MODMED_API_KEY || process.env.NODE_ENV === 'development') {\r\n    console.log(`Mocking ${method} request to ${url}`);\r\n    if (method === 'GET') {\r\n      return {\r\n        status: 200,\r\n        data: {\r\n          resourceType: 'Bundle',\r\n          total: 1,\r\n          entry: [\r\n            {\r\n              resource: {\r\n                resourceType: 'MedicationStatement',\r\n                id: 'mock-med-123',\r\n                status: 'active',\r\n                medicationCodeableConcept: { coding: [{ system: 'http://snomed.info/sct', code: '12345', display: 'Aspirin' }] },\r\n                subject: { reference: 'Patient/mock-123' },\r\n                effectiveDateTime: '2025-01-01',\r\n                dosage: [{ text: '1 tablet daily', doseQuantity: { value: 1, unit: 'tablet' } }],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    } else if (method === 'POST' || method === 'PUT') {\r\n      return {\r\n        status: method === 'POST' ? 201 : 200,\r\n        data: { ...body, id: body?.id || `mock-med-${Date.now()}` },\r\n      };\r\n    }\r\n  }\r\n\r\n  const token = accessToken || (await getAccessToken());\r\n  const headers = {\r\n    accept: 'application/fhir+json',\r\n    authorization: `Bearer ${token}`,\r\n    'x-api-key': process.env.MODMED_API_KEY!,\r\n    'content-type': 'application/fhir+json',\r\n  };\r\n\r\n  try {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 10000);\r\n    const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n      signal: controller.signal,\r\n    });\r\n    clearTimeout(timeoutId);\r\n\r\n    console.log(`ModMed API Request: ${method} ${url}`);\r\n    console.log(`ModMed API Response Status: ${response.status} ${response.statusText}`);\r\n    console.log(`ModMed API Response Headers:`, Object.fromEntries(response.headers.entries()));\r\n\r\n    const contentType = response.headers.get('content-type');\r\n    if (!response.ok) {\r\n      let errorDetails: any = { status: response.status, statusText: response.statusText };\r\n      const responseText = await response.text();\r\n      console.log('Raw Response Body:', responseText || 'Empty response');\r\n      if (contentType?.includes('application/json') || contentType?.includes('application/fhir+json')) {\r\n        try {\r\n          const errorData = JSON.parse(responseText);\r\n          errorDetails = { ...errorDetails, ...errorData };\r\n          console.log('Parsed Error Response:', errorData);\r\n        } catch (e) {\r\n          console.warn('Failed to parse error response as JSON:', e);\r\n          errorDetails.rawText = responseText || 'Empty response';\r\n        }\r\n      } else {\r\n        errorDetails.rawText = responseText || 'Empty response';\r\n      }\r\n\r\n      if ((response.status === 429 || response.status === 503) && retryCount < 3) {\r\n        console.log(`Retrying request (attempt ${retryCount + 2})...`);\r\n        await new Promise(resolve => setTimeout(resolve, 1000 * (retryCount + 1)));\r\n        return makeApiRequest(method, url, body, token, retryCount + 1);\r\n      }\r\n\r\n      throw new Error(JSON.stringify(errorDetails));\r\n    }\r\n\r\n    if (response.status === 204 || !contentType?.includes('json')) {\r\n      return { status: response.status, data: null };\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('ModMed API Success Response:', JSON.stringify(data, null, 2));\r\n    return { status: response.status, data };\r\n  } catch (error: any) {\r\n    if (error.name === 'AbortError') {\r\n      throw new Error('Request timed out after 10 seconds');\r\n    }\r\n    console.error('API request error:', error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const id = searchParams.get('id');\r\n    const patient = searchParams.get('patient');\r\n    const _count = searchParams.get('_count') || '100';\r\n    const page = searchParams.get('page') || '1';\r\n    let url = API_URL;\r\n\r\n    if (id) {\r\n      url = `${API_URL}/${id}`;\r\n    } else if (patient) {\r\n      url = `${API_URL}?patient=${patient}&_count=${_count}&page=${page}`;\r\n    } else {\r\n      url = `${API_URL}?_count=${_count}&page=${page}`;\r\n    }\r\n\r\n    const accessToken = await getAccessToken();\r\n    const response = await makeApiRequest('GET', url, undefined, accessToken);\r\n    const data = response.data || {};\r\n\r\n    const medications = id\r\n      ? [data].filter(Boolean).map((resource: any) => ({\r\n          id: resource.id || 'N/A',\r\n          medication: resource.medicationCodeableConcept?.coding?.[0]?.display || 'Unknown',\r\n          status: resource.status || 'unknown',\r\n          patientId: resource.subject?.reference?.replace('Patient/', '') || 'N/A',\r\n          effectiveDate: resource.effectiveDateTime || '',\r\n          dosage: resource.dosage?.[0]?.text || 'N/A',\r\n        }))\r\n      : data.entry?.map((entry: { resource: any }) => {\r\n          const resource = entry.resource;\r\n          return {\r\n            id: resource.id || 'N/A',\r\n            medication: resource.medicationCodeableConcept?.coding?.[0]?.display || 'Unknown',\r\n            status: resource.status || 'unknown',\r\n            patientId: resource.subject?.reference?.replace('Patient/', '') || 'N/A',\r\n            effectiveDate: resource.effectiveDateTime || '',\r\n            dosage: resource.dosage?.[0]?.text || 'N/A',\r\n          };\r\n        }) || [];\r\n\r\n    return NextResponse.json(medications);\r\n  } catch (error: any) {\r\n    console.error('Error fetching medications:', error.message);\r\n    const errorDetails = error.message.startsWith('{') ? JSON.parse(error.message) : { details: error.message };\r\n    return NextResponse.json(\r\n      { error: 'Failed to fetch medications', details: errorDetails },\r\n      { status: errorDetails.status || 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const accessToken = await getAccessToken();\r\n    const body = await request.json();\r\n\r\n    if (!body.medication || !body.status || !body.patientId) {\r\n      throw new Error('Missing required fields: medication, status, patientId');\r\n    }\r\n\r\n    const fhirMedicationStatement: FhirMedicationStatement = {\r\n      resourceType: 'MedicationStatement',\r\n      status: body.status,\r\n      medicationCodeableConcept: {\r\n        coding: [{ system: 'http://snomed.info/sct', code: body.medicationCode || '12345', display: body.medication }],\r\n      },\r\n      subject: { reference: `Patient/${body.patientId}` },\r\n      effectiveDateTime: body.effectiveDate || new Date().toISOString().split('T')[0],\r\n      dosage: body.dosage ? [{ text: body.dosage, doseQuantity: { value: body.doseValue || 1, unit: body.doseUnit || 'tablet' } }] : undefined,\r\n    };\r\n\r\n    console.log('FHIR Payload Sent to ModMed (POST):', JSON.stringify(fhirMedicationStatement, null, 2));\r\n\r\n    const response = await makeApiRequest('POST', API_URL, fhirMedicationStatement, accessToken);\r\n    return NextResponse.json(response.data || { message: 'Medication created', id: response.data?.id }, { status: 201 });\r\n  } catch (error: any) {\r\n    console.error('Error creating medication:', error.message);\r\n    const errorDetails = error.message.startsWith('{') ? JSON.parse(error.message) : { details: error.message };\r\n    return NextResponse.json(\r\n      { error: 'Failed to create medication', details: errorDetails },\r\n      { status: errorDetails.status || 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const accessToken = await getAccessToken();\r\n    const body = await request.json();\r\n\r\n    if (!body.id || !body.medication || !body.status || !body.patientId) {\r\n      throw new Error('Missing required fields: id, medication, status, patientId');\r\n    }\r\n\r\n    const fhirMedicationStatement: FhirMedicationStatement = {\r\n      resourceType: 'MedicationStatement',\r\n      id: body.id,\r\n      status: body.status,\r\n      medicationCodeableConcept: {\r\n        coding: [{ system: 'http://snomed.info/sct', code: body.medicationCode || '12345', display: body.medication }],\r\n      },\r\n      subject: { reference: `Patient/${body.patientId}` },\r\n      effectiveDateTime: body.effectiveDate || new Date().toISOString().split('T')[0],\r\n      dosage: body.dosage ? [{ text: body.dosage, doseQuantity: { value: body.doseValue || 1, unit: body.doseUnit || 'tablet' } }] : undefined,\r\n    };\r\n\r\n\r\n\r\n    const response = await makeApiRequest('PUT', `${API_URL}/${body.id}`, fhirMedicationStatement, accessToken);\r\n    return NextResponse.json(response.data || { message: 'Medication updated', id: body.id }, { status: 200 });\r\n  } catch (error: any) {\r\n    console.error('Error updating medication:', error.message);\r\n    const errorDetails = error.message.startsWith('{') ? JSON.parse(error.message) : { details: error.message };\r\n    return NextResponse.json(\r\n      { error: 'Failed to update medication', details: errorDetails },\r\n      { status: errorDetails.status || 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[1]}